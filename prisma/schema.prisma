// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String          @id @default(cuid())
  email             String
  userName          String?
  password          String
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  serviceProviderId String          @unique
  serviceProvider   ServiceProvider @relation(fields: [serviceProviderId], references: [id])
}

model ServiceProvider {
  id        String    @id @default(cuid())
  name      String
  lastName  String
  phone     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  User      User?
  userId    String    @unique
  services  Service[]
  bookings  Booking[]
}

model Service {
  id                String          @id @default(cuid())
  name              String
  price             Float
  description       String
  isActive          Boolean
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  serviceProviderId String          @unique
  serviceProvider   ServiceProvider @relation(fields: [serviceProviderId], references: [id])
  bookings          Booking[]
}

model Booking {
  id             String          @id @default(cuid())
  date           DateTime
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  serviceId      String          @unique
  isActive       Boolean
  service        Service         @relation(fields: [serviceId], references: [id])
  providerId     String          @unique
  provider       ServiceProvider @relation(fields: [providerId], references: [id])
  providerReview ProviderReview?
  serviceReview  ServiceReview?
}

model ProviderReview {
  id        String   @id @default(cuid())
  rating    Int
  comment   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bookingId String   @unique
  booking   Booking  @relation(fields: [bookingId], references: [id])
}

model ServiceReview {
  id        String   @id @default(cuid())
  rating    Int
  comment   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bookingId String   @unique
  booking   Booking  @relation(fields: [bookingId], references: [id])
}
